{
    "kind": "youtube#videoListResponse",
    "etag": "cc2qeVX7lriZ6Kghz_j2jQf0LSE",
    "items": [
        {
            "kind": "youtube#video",
            "etag": "fogSCWUt3lqr4y1LwFQ_IBH5LGE",
            "id": "4d5C_PQl8Tg",
            "snippet": {
                "publishedAt": "2025-01-20T09:00:02Z",
                "channelId": "UCNtZPzvkjjB3EuPMNY71cmA",
                "title": "GOT7 'PYTHON' MV",
                "description": "GOT7 \u3010WINTER HEPTAGON\u3011 Listen Now!\n\nStreaming & Download\n\ud83c\udfa7 https://lnk.to/WINTER_HEPTAGON\n\n#GOT7 #\uac13\uc138\ube10\n#PYTHON #GOT7_PYTHON\n#WINTER_HEPTAGON\n#GOT7_WINTER_HEPTAGON",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/4d5C_PQl8Tg/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/4d5C_PQl8Tg/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/4d5C_PQl8Tg/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/4d5C_PQl8Tg/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/4d5C_PQl8Tg/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "GOT7",
                "categoryId": "10",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "GOT7 'PYTHON' MV",
                    "description": "GOT7 \u3010WINTER HEPTAGON\u3011 Listen Now!\n\nStreaming & Download\n\ud83c\udfa7 https://lnk.to/WINTER_HEPTAGON\n\n#GOT7 #\uac13\uc138\ube10\n#PYTHON #GOT7_PYTHON\n#WINTER_HEPTAGON\n#GOT7_WINTER_HEPTAGON"
                },
                "defaultAudioLanguage": "ko"
            },
            "statistics": {
                "viewCount": "17667688",
                "likeCount": "878374",
                "favoriteCount": "0",
                "commentCount": "77861"
            }
        },
        {
            "kind": "youtube#video",
            "etag": "mjRP9IDIBAVnadEoueSDNf2NisE",
            "id": "kqtD5dpn9C8",
            "snippet": {
                "publishedAt": "2020-09-16T13:00:20Z",
                "channelId": "UCWv7vMbMWH4-V0ZXdmDpPBA",
                "title": "Python for Beginners - Learn Coding with Python in 1 Hour",
                "description": "Learn Python basics in just 1 hour! Perfect for beginners interested in AI and coding. \u26a1 Plus, get 6 months of PyCharm FREE with the coupon in the description!\n\n\u2764\ufe0f Join this channel to get access to perks:\nhttps://www.youtube.com/channel/UCWv7vMbMWH4-V0ZXdmDpPBA/join\n\n\ud83d\ude80 Want to dive deeper? Check out my Complete Python Mastery course: \n- Full course: https://mosh.link/python-course\n- Subscribe for more Python tutorials like this: https://goo.gl/6PYaGF\n\n\ud83d\udcd5 Get the FREE goodies:\n- Python cheat sheet: https://mosh.link/python-cheatsheet\n- Get 6 months of PyCharm for free with this coupon code: MOSH_YOUTUBE - Redeem it at: https://jb.gg/redeem\n\n\u270b Stay connected:\n- Twitter: https://twitter.com/moshhamedani\n- Facebook: https://www.facebook.com/programmingwithmosh/\n- Instagram: https://www.instagram.com/codewithmosh.official/\n- LinkedIn: https://www.linkedin.com/school/codewithmosh/\n\n\u2b50 Related tutorials\nhttps://youtu.be/yVl_G-F7m8c?si=11emtFyDccTKCGn7\n\n\ud83d\udcd6 TABLE OF CONTENT\n0:00:00 Introduction \n0:00:30 What You Can Do With Python \n0:01:15 Your First Python Program \n0:05:30 Variables\n0:09:08 Receiving Input\n0:10:48 Type Conversion\n0:18:49 Strings\n0:23:41 Arithmetic Operators \n0:25:59 Operator Precedence \n0:27:11 Comparison Operators \n0:28:52 Logical Operators\n0:31:06 If Statements\n0:36:16 Exercise\n0:41:42 While Loops\n0:45:11 Lists\n0:48:47 List Methods\n0:52:16 For Loops\n0:54:54 The range() Function \n0:57:43 Tuples\n\n#Python #AI #MachineLearning #WebDevelopment",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/kqtD5dpn9C8/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/kqtD5dpn9C8/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/kqtD5dpn9C8/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/kqtD5dpn9C8/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/kqtD5dpn9C8/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Programming with Mosh",
                "tags": [
                    "code with mosh",
                    "introduction to python",
                    "learn python",
                    "learn python programming",
                    "mosh hamedani",
                    "programming",
                    "programming with mosh",
                    "python",
                    "python 2020",
                    "python 3",
                    "python basics",
                    "python course",
                    "python crash course",
                    "python for beginners",
                    "python from scratch",
                    "python programming",
                    "python tutorial",
                    "python tutorial for beginners",
                    "web development"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Python for Beginners - Learn Coding with Python in 1 Hour",
                    "description": "Learn Python basics in just 1 hour! Perfect for beginners interested in AI and coding. \u26a1 Plus, get 6 months of PyCharm FREE with the coupon in the description!\n\n\u2764\ufe0f Join this channel to get access to perks:\nhttps://www.youtube.com/channel/UCWv7vMbMWH4-V0ZXdmDpPBA/join\n\n\ud83d\ude80 Want to dive deeper? Check out my Complete Python Mastery course: \n- Full course: https://mosh.link/python-course\n- Subscribe for more Python tutorials like this: https://goo.gl/6PYaGF\n\n\ud83d\udcd5 Get the FREE goodies:\n- Python cheat sheet: https://mosh.link/python-cheatsheet\n- Get 6 months of PyCharm for free with this coupon code: MOSH_YOUTUBE - Redeem it at: https://jb.gg/redeem\n\n\u270b Stay connected:\n- Twitter: https://twitter.com/moshhamedani\n- Facebook: https://www.facebook.com/programmingwithmosh/\n- Instagram: https://www.instagram.com/codewithmosh.official/\n- LinkedIn: https://www.linkedin.com/school/codewithmosh/\n\n\u2b50 Related tutorials\nhttps://youtu.be/yVl_G-F7m8c?si=11emtFyDccTKCGn7\n\n\ud83d\udcd6 TABLE OF CONTENT\n0:00:00 Introduction \n0:00:30 What You Can Do With Python \n0:01:15 Your First Python Program \n0:05:30 Variables\n0:09:08 Receiving Input\n0:10:48 Type Conversion\n0:18:49 Strings\n0:23:41 Arithmetic Operators \n0:25:59 Operator Precedence \n0:27:11 Comparison Operators \n0:28:52 Logical Operators\n0:31:06 If Statements\n0:36:16 Exercise\n0:41:42 While Loops\n0:45:11 Lists\n0:48:47 List Methods\n0:52:16 For Loops\n0:54:54 The range() Function \n0:57:43 Tuples\n\n#Python #AI #MachineLearning #WebDevelopment"
                },
                "defaultAudioLanguage": "en-US"
            },
            "statistics": {
                "viewCount": "21010024",
                "likeCount": "491338",
                "favoriteCount": "0",
                "commentCount": "24503"
            }
        },
        {
            "kind": "youtube#video",
            "etag": "HM5kgR8tdOBt4Y0GyHt5Q8h09MU",
            "id": "_uQrJ0TkZlc",
            "snippet": {
                "publishedAt": "2019-02-18T15:00:08Z",
                "channelId": "UCWv7vMbMWH4-V0ZXdmDpPBA",
                "title": "Python Full Course for Beginners",
                "description": "Learn Python for AI, machine learning, and web development with this beginner-friendly course! \ud83d\ude80 Get 6 months of PyCharm FREE with the coupon in the description!\n\n\u2764\ufe0f Join this channel to get access to perks:\nhttps://www.youtube.com/channel/UCWv7vMbMWH4-V0ZXdmDpPBA/join\n\n\ud83d\ude80 Want to dive deeper?\n- Check out my Python mastery course: https://mosh.link/python-course\n- Subscribe for more awesome Python content: https://goo.gl/6PYaGF\n\n\ud83d\udd17 Related videos \nhttps://youtu.be/yVl_G-F7m8c?si=aoIiT6CyaRRfBsRM\n\n\ud83d\udc49 New version available Watch here: https://youtu.be/kqtD5dpn9C8\n\n\ud83d\udcd5 Get the FREE goodies:\n- Python cheat sheet: https://mosh.link/python-cheatsheet\n- Supplementary materials (spreadsheet): https://github.com/mosh-hamedani/python-supplementary-materials\n- Get 6 months of PyCharm for free with this coupon code: MOSH_YOUTUBE - Redeem it at: https://jb.gg/redeem\n\n\u270b Stay connected:\n- Twitter: https://twitter.com/moshhamedani\n- Facebook: https://www.facebook.com/programmingwithmosh/\n- Instagram: https://www.instagram.com/codewithmosh.official/\n- LinkedIn: https://www.linkedin.com/school/codewithmosh/\n\n\u2b50 My favorite Python books\n- Python Crash Course: https://amzn.to/2GqMdjG\n- Automate the Boring Stuff with Python: https://amzn.to/2N71d6S\n- A Smarter Way to Learn Python: https://amzn.to/2UZa6lE\n- Machine Learning for Absolute Beginners: https://amzn.to/2Gs0koL\n- Hands-on Machine Learning with scikit-learn and TensorFlow: https://amzn.to/2IdUuJy\n\n\ud83d\udcd6 TABLE OF CONTENT\n00:00:00 Introduction\n00:01:49 Installing Python 3\n00:06:10 Your First Python Program\n00:08:11 How Python Code Gets Executed \n00:11:24 How Long It Takes To Learn Python \n00:13:03 Variables\n00:18:21 Receiving Input\n00:22:16 Python Cheat Sheet\n00:22:46 Type Conversion\n00:29:31 Strings\n00:37:36 Formatted Strings\n00:40:50 String Methods\n00:48:33 Arithmetic Operations\n00:51:33 Operator Precedence\n00:55:04 Math Functions\n00:58:17 If Statements\n01:06:32 Logical Operators\n01:11:25 Comparison Operators\n01:16:17 Weight Converter Program \n01:20:43 While Loops\n01:24:07 Building a Guessing Game\n01:30:51 Building the Car Game\n01:41:48 For Loops\n01:47:46 Nested Loops\n01:55:50 Lists\n02:01:45 2D Lists\n02:05:11 My Complete Python Course \n02:06:00 List Methods\n02:13:25 Tuples\n02:15:34 Unpacking\n02:18:21 Dictionaries\n02:26:21 Emoji Converter\n02:30:31 Functions\n02:35:21 Parameters\n02:39:24 Keyword Arguments \n02:44:45 Return Statement\n02:48:55 Creating a Reusable Function \n02:53:42 Exceptions\n02:59:14 Comments\n03:01:46 Classes\n03:07:46 Constructors\n03:14:41 Inheritance\n03:19:33 Modules\n03:30:12 Packages\n03:36:22 Generating Random Values\n03:44:37 Working with Directories \n03:50:47 Pypi and Pip\n03:55:34 Project 1: Automation with Python\n04:10:22 Project 2: Machine Learning with Python \n04:58:37 Project 3: Building a Website with Django\n\n#Python #AI #MachineLearning #WebDevelopment",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/_uQrJ0TkZlc/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/_uQrJ0TkZlc/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/_uQrJ0TkZlc/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/_uQrJ0TkZlc/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/_uQrJ0TkZlc/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Programming with Mosh",
                "tags": [
                    "python tutorial",
                    "python",
                    "python for beginners",
                    "python tutorial for beginners",
                    "learn python",
                    "python crash course",
                    "python 2019",
                    "python tutorial for beginners full",
                    "python (programming language)",
                    "python basics",
                    "python course",
                    "python from scratch",
                    "python full course",
                    "python language",
                    "python programming",
                    "python programming language",
                    "python programming tutorial",
                    "getting started with python",
                    "learn python programming",
                    "web development",
                    "mosh hamedani",
                    "machine learning",
                    "python 2020"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "defaultLanguage": "en",
                "localized": {
                    "title": "Python Full Course for Beginners",
                    "description": "Learn Python for AI, machine learning, and web development with this beginner-friendly course! \ud83d\ude80 Get 6 months of PyCharm FREE with the coupon in the description!\n\n\u2764\ufe0f Join this channel to get access to perks:\nhttps://www.youtube.com/channel/UCWv7vMbMWH4-V0ZXdmDpPBA/join\n\n\ud83d\ude80 Want to dive deeper?\n- Check out my Python mastery course: https://mosh.link/python-course\n- Subscribe for more awesome Python content: https://goo.gl/6PYaGF\n\n\ud83d\udd17 Related videos \nhttps://youtu.be/yVl_G-F7m8c?si=aoIiT6CyaRRfBsRM\n\n\ud83d\udc49 New version available Watch here: https://youtu.be/kqtD5dpn9C8\n\n\ud83d\udcd5 Get the FREE goodies:\n- Python cheat sheet: https://mosh.link/python-cheatsheet\n- Supplementary materials (spreadsheet): https://github.com/mosh-hamedani/python-supplementary-materials\n- Get 6 months of PyCharm for free with this coupon code: MOSH_YOUTUBE - Redeem it at: https://jb.gg/redeem\n\n\u270b Stay connected:\n- Twitter: https://twitter.com/moshhamedani\n- Facebook: https://www.facebook.com/programmingwithmosh/\n- Instagram: https://www.instagram.com/codewithmosh.official/\n- LinkedIn: https://www.linkedin.com/school/codewithmosh/\n\n\u2b50 My favorite Python books\n- Python Crash Course: https://amzn.to/2GqMdjG\n- Automate the Boring Stuff with Python: https://amzn.to/2N71d6S\n- A Smarter Way to Learn Python: https://amzn.to/2UZa6lE\n- Machine Learning for Absolute Beginners: https://amzn.to/2Gs0koL\n- Hands-on Machine Learning with scikit-learn and TensorFlow: https://amzn.to/2IdUuJy\n\n\ud83d\udcd6 TABLE OF CONTENT\n00:00:00 Introduction\n00:01:49 Installing Python 3\n00:06:10 Your First Python Program\n00:08:11 How Python Code Gets Executed \n00:11:24 How Long It Takes To Learn Python \n00:13:03 Variables\n00:18:21 Receiving Input\n00:22:16 Python Cheat Sheet\n00:22:46 Type Conversion\n00:29:31 Strings\n00:37:36 Formatted Strings\n00:40:50 String Methods\n00:48:33 Arithmetic Operations\n00:51:33 Operator Precedence\n00:55:04 Math Functions\n00:58:17 If Statements\n01:06:32 Logical Operators\n01:11:25 Comparison Operators\n01:16:17 Weight Converter Program \n01:20:43 While Loops\n01:24:07 Building a Guessing Game\n01:30:51 Building the Car Game\n01:41:48 For Loops\n01:47:46 Nested Loops\n01:55:50 Lists\n02:01:45 2D Lists\n02:05:11 My Complete Python Course \n02:06:00 List Methods\n02:13:25 Tuples\n02:15:34 Unpacking\n02:18:21 Dictionaries\n02:26:21 Emoji Converter\n02:30:31 Functions\n02:35:21 Parameters\n02:39:24 Keyword Arguments \n02:44:45 Return Statement\n02:48:55 Creating a Reusable Function \n02:53:42 Exceptions\n02:59:14 Comments\n03:01:46 Classes\n03:07:46 Constructors\n03:14:41 Inheritance\n03:19:33 Modules\n03:30:12 Packages\n03:36:22 Generating Random Values\n03:44:37 Working with Directories \n03:50:47 Pypi and Pip\n03:55:34 Project 1: Automation with Python\n04:10:22 Project 2: Machine Learning with Python \n04:58:37 Project 3: Building a Website with Django\n\n#Python #AI #MachineLearning #WebDevelopment"
                },
                "defaultAudioLanguage": "en"
            },
            "statistics": {
                "viewCount": "43663209",
                "likeCount": "1176809",
                "favoriteCount": "0",
                "commentCount": "59745"
            }
        },
        {
            "kind": "youtube#video",
            "etag": "fLZzThdb7IoHnr5R6du7RvLv7cU",
            "id": "x7X9w_GIm1s",
            "snippet": {
                "publishedAt": "2021-10-25T15:19:28Z",
                "channelId": "UCsBjURrPoezykLs9EqgamOA",
                "title": "Python in 100 Seconds",
                "description": "Python is arguably the world's most popular programming language. It is easy to learn, yet suitable in professional software like web applications, data science, and server-side scripts. https://fireship.io/tags/python/\n\n#python #programming #100SecondsOfCode\n\n\ud83d\udd17 Resources\n\nPython Docs https://docs.python.org/3/\nPython TIOBE Ranking https://www.infoworld.com/article/3636789/python-tops-tiobe-language-index.html\n\n\ud83d\udd25 Get More Content - Upgrade to PRO\n\nUpgrade to Fireship PRO at https://fireship.io/pro\nUse code lORhwXd2 for 25% off your first payment. \n\n\ud83c\udfa8 My Editor Settings\n\n- Atom One Dark \n- vscode-icons\n- Fira Code Font\n\n\ud83d\udd16 Topics Covered\n\n- Is YouTube built with Python?\n- Is Python Strongly typed?\n- Python syntax and indentation rules\n- When was python released?",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/x7X9w_GIm1s/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/x7X9w_GIm1s/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/x7X9w_GIm1s/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/x7X9w_GIm1s/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/x7X9w_GIm1s/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Fireship",
                "tags": [
                    "webdev",
                    "app development",
                    "lesson",
                    "tutorial"
                ],
                "categoryId": "28",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Python in 100 Seconds",
                    "description": "Python is arguably the world's most popular programming language. It is easy to learn, yet suitable in professional software like web applications, data science, and server-side scripts. https://fireship.io/tags/python/\n\n#python #programming #100SecondsOfCode\n\n\ud83d\udd17 Resources\n\nPython Docs https://docs.python.org/3/\nPython TIOBE Ranking https://www.infoworld.com/article/3636789/python-tops-tiobe-language-index.html\n\n\ud83d\udd25 Get More Content - Upgrade to PRO\n\nUpgrade to Fireship PRO at https://fireship.io/pro\nUse code lORhwXd2 for 25% off your first payment. \n\n\ud83c\udfa8 My Editor Settings\n\n- Atom One Dark \n- vscode-icons\n- Fira Code Font\n\n\ud83d\udd16 Topics Covered\n\n- Is YouTube built with Python?\n- Is Python Strongly typed?\n- Python syntax and indentation rules\n- When was python released?"
                },
                "defaultAudioLanguage": "en"
            },
            "statistics": {
                "viewCount": "2776886",
                "likeCount": "110595",
                "favoriteCount": "0",
                "commentCount": "1765"
            }
        },
        {
            "kind": "youtube#video",
            "etag": "y6bOwunI-71u_iaj6YWFc4rBK5o",
            "id": "ix9cRaBkVe0",
            "snippet": {
                "publishedAt": "2024-08-20T13:00:54Z",
                "channelId": "UC4SVo0Ue36XCfOyb5Lh1viQ",
                "title": "Python Full Course for free \ud83d\udc0d (2024)",
                "description": "#python #tutorial #beginners \nPython tutorial for beginners' full course 2024\n\n*Learn Python in 1 HOUR* \u23f1 : https://www.youtube.com/watch?v=8KCuHHeC_M0\n*My original Python 12 Hour course* \ud83d\udc0d :  https://www.youtube.com/watch?v=XKHEtdqhLK8\n*Full Python playlist* \ud83d\udcc3: https://www.youtube.com/watch?v=Sg4GMVMdOPo&list=PLZPZq0r_RZOOkUQbat8LyQii36cJf2SWT\n\n                           [\u2b50 = project]\n#1   (00:00:00) python tutorial for beginners \ud83d\udc0d\n#2   (00:05:49) variables \u274e\n#3   (00:16:05) type casting \ud83d\udcb1\n#4   (00:21:15) user input \u2328\ufe0f\n#5   (00:32:42) \u2b50 madlibs game \ud83d\udcd6\n#6   (00:37:55) arithmetic & math \ud83d\udcd0\n#7   (00:51:46) if statements \ud83e\udd14\n#8   (01:00:06) \u2b50 calculator program \ud83e\uddee\n#9   (01:05:59) \u2b50 weight conversion program \ud83c\udfcb\ufe0f\n#10 (01:09:59) \u2b50 temperature conversion program \ud83c\udf21\ufe0f\n#11 (01:13:58) logical operators \ud83c\udf26\ufe0f\n#12 (01:21:28) conditional expressions \u2753\n#13 (01:27:03) string methods \u3030\ufe0f\n#14 (01:39:08) string indexing \u2702\ufe0f\n#15 (01:46:35) format specifiers \ud83d\udcac\n#16 (01:51:55) while loops \u267e\ufe0f\n#17 (01:58:53) \u2b50 compound interest calculator \ud83d\udcb5\n#18 (02:06:28) for loops \ud83d\udd01\n#19 (02:11:33) \u2b50 countdown timer program \u231b\n#20 (02:17:28) nested loops \u27bf\n#21 (02:23:03) lists, sets, and tuples \ud83c\udf4e\n#22 (02:38:08) \u2b50 shopping cart program \ud83d\uded2\n#23 (02:45:21) 2D collections \u2b1c\n#24 (02:53:59) \u2b50 quiz game \ud83d\udcaf\n#25 (03:03:27) dictionaries \ud83d\udcd9\n#26 (03:11:33) \u2b50 concession stand program \ud83c\udf7f\n#27 (03:19:42) random numbers \ud83c\udfb2\n#28 (03:24:16) \u2b50 number guessing game \ud83d\udd22\n#29 (03:32:37) \u2b50 rock, paper, scissors game \ud83d\uddff\n#30 (03:42:06) \u2b50 dice roller program \u2682\n#31 (03:52:12) functions \ud83d\udcde\n#32 (04:02:50) default arguments \ud83d\udc4d\n#33 (04:08:56) keyword arguments \ud83d\udddd\ufe0f\n#34 (04:15:40) *args & **kwargs \ud83d\udce6\n#35 (04:30:33) iterables \ud83d\udd02\n#36 (04:37:04) membership operators \ud83d\udd0e\n#37 (04:45:56) list comprehensions \ud83d\udcc3\n#38 (04:56:17) match-case statements \ud83d\udcc6\n#39 (05:02:13) modules \ud83d\udce8\n#40 (05:08:51) scope resolution \ud83d\udd2c\n#41 (05:14:22) if name == 'main': \ud83d\udce5\n#42 (05:23:34) \u2b50 banking program \ud83d\udcb0\n#43 (05:38:34) \u2b50 slot machine \ud83c\udfb0\n#44 (05:58:45) \u2b50 encryption program \ud83d\udd10\n#45 (06:07:26) \u2b50 hangman game \ud83d\udd7a\n#46 (06:32:32) python object oriented programming \ud83d\ude97\n#47 (06:44:50) class variables \ud83c\udf93\n#48 (06:53:06) inheritance \ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66\n#49 (07:00:02) multiple inheritance \ud83d\udc1f\n#50 (07:08:04) super() \ud83d\udd34\n#51 (07:21:10) polymorphism \ud83c\udfad\n#52 (07:29:15) duck typing \ud83e\udd86\n#53 (07:33:34) static methods \u26a1\n#54 (07:39:31) class methods \ud83c\udfeb\n#55 (07:46:16) magic methods \ud83c\udf1f\n#56 (07:59:51) @property \u2699\ufe0f\n#57 (08:07:33) decorators \ud83c\udf8a\n#58 (08:14:57) exception handling \ud83d\udea6\n#59 (08:20:46) file detection \ud83d\udd75\ufe0f\u200d\u2642\ufe0f\n#60 (08:27:47) writing files \u270d\n#61 (08:41:33) reading files \ud83d\udd0d\n#62 (08:48:29) dates & times \ud83d\udcc5\n#63 (08:54:46) \u2b50 alarm clock \u23f0\n#64 (09:05:03) multithreading \ud83e\uddf5\n#65 (09:13:45) request API data \u21a9\ufe0f\n#66 (09:22:19) PyQt5 GUI intro \ud83d\udda5\ufe0f\n#67 (09:31:27) PyQt5 labels \ud83c\udff7\ufe0f\n#68 (09:40:23) PyQt5 images \ud83d\udcf7\n#69 (09:46:28) PyQt5 layout managers \ud83e\uddf2\n#70 (09:53:07) PyQt5 buttons \ud83d\udece\ufe0f\n#71 (10:00:12) PyQt5 checkboxes \u2705\n#72 (10:06:42) PyQt5 radio buttons \ud83d\udd18\n#73 (10:15:55) PyQt5 line edits \ud83d\udcac\n#74 (10:21:55) PyQt5 CSS styles \ud83c\udfa8\n#75 (10:32:48) \u2b50 digital clock program \ud83d\udd52\n#76 (10:48:38) \u2b50 stopwatch program \u23f1\n#77 (11:06:05) \u2b50 weather API app \u2600\ufe0f\n\nPython Interpreter: https://www.python.org/\nPyCharm IDE: https://www.jetbrains.com/pycharm/\n\n*Copyright Disclaimer*:\nThis video is the intellectual property of Bro Code. All rights reserved. No part of this video may be reproduced, distributed, or transmitted in any form or by any means, including but not limited to recording, uploading, or other electronic or mechanical methods, without my written permission, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/ix9cRaBkVe0/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/ix9cRaBkVe0/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/ix9cRaBkVe0/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/ix9cRaBkVe0/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/ix9cRaBkVe0/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Bro Code",
                "tags": [
                    "Python tutorial",
                    "python course",
                    "python programming",
                    "python",
                    "python tutorial",
                    "python language",
                    "python full course",
                    "learn python",
                    "learn python programming",
                    "python tutorial for beginners",
                    "python programming tutorial",
                    "python programming language",
                    "software development",
                    "programming tutorial"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "defaultLanguage": "en",
                "localized": {
                    "title": "Python Full Course for free \ud83d\udc0d (2024)",
                    "description": "#python #tutorial #beginners \nPython tutorial for beginners' full course 2024\n\n*Learn Python in 1 HOUR* \u23f1 : https://www.youtube.com/watch?v=8KCuHHeC_M0\n*My original Python 12 Hour course* \ud83d\udc0d :  https://www.youtube.com/watch?v=XKHEtdqhLK8\n*Full Python playlist* \ud83d\udcc3: https://www.youtube.com/watch?v=Sg4GMVMdOPo&list=PLZPZq0r_RZOOkUQbat8LyQii36cJf2SWT\n\n                           [\u2b50 = project]\n#1   (00:00:00) python tutorial for beginners \ud83d\udc0d\n#2   (00:05:49) variables \u274e\n#3   (00:16:05) type casting \ud83d\udcb1\n#4   (00:21:15) user input \u2328\ufe0f\n#5   (00:32:42) \u2b50 madlibs game \ud83d\udcd6\n#6   (00:37:55) arithmetic & math \ud83d\udcd0\n#7   (00:51:46) if statements \ud83e\udd14\n#8   (01:00:06) \u2b50 calculator program \ud83e\uddee\n#9   (01:05:59) \u2b50 weight conversion program \ud83c\udfcb\ufe0f\n#10 (01:09:59) \u2b50 temperature conversion program \ud83c\udf21\ufe0f\n#11 (01:13:58) logical operators \ud83c\udf26\ufe0f\n#12 (01:21:28) conditional expressions \u2753\n#13 (01:27:03) string methods \u3030\ufe0f\n#14 (01:39:08) string indexing \u2702\ufe0f\n#15 (01:46:35) format specifiers \ud83d\udcac\n#16 (01:51:55) while loops \u267e\ufe0f\n#17 (01:58:53) \u2b50 compound interest calculator \ud83d\udcb5\n#18 (02:06:28) for loops \ud83d\udd01\n#19 (02:11:33) \u2b50 countdown timer program \u231b\n#20 (02:17:28) nested loops \u27bf\n#21 (02:23:03) lists, sets, and tuples \ud83c\udf4e\n#22 (02:38:08) \u2b50 shopping cart program \ud83d\uded2\n#23 (02:45:21) 2D collections \u2b1c\n#24 (02:53:59) \u2b50 quiz game \ud83d\udcaf\n#25 (03:03:27) dictionaries \ud83d\udcd9\n#26 (03:11:33) \u2b50 concession stand program \ud83c\udf7f\n#27 (03:19:42) random numbers \ud83c\udfb2\n#28 (03:24:16) \u2b50 number guessing game \ud83d\udd22\n#29 (03:32:37) \u2b50 rock, paper, scissors game \ud83d\uddff\n#30 (03:42:06) \u2b50 dice roller program \u2682\n#31 (03:52:12) functions \ud83d\udcde\n#32 (04:02:50) default arguments \ud83d\udc4d\n#33 (04:08:56) keyword arguments \ud83d\udddd\ufe0f\n#34 (04:15:40) *args & **kwargs \ud83d\udce6\n#35 (04:30:33) iterables \ud83d\udd02\n#36 (04:37:04) membership operators \ud83d\udd0e\n#37 (04:45:56) list comprehensions \ud83d\udcc3\n#38 (04:56:17) match-case statements \ud83d\udcc6\n#39 (05:02:13) modules \ud83d\udce8\n#40 (05:08:51) scope resolution \ud83d\udd2c\n#41 (05:14:22) if name == 'main': \ud83d\udce5\n#42 (05:23:34) \u2b50 banking program \ud83d\udcb0\n#43 (05:38:34) \u2b50 slot machine \ud83c\udfb0\n#44 (05:58:45) \u2b50 encryption program \ud83d\udd10\n#45 (06:07:26) \u2b50 hangman game \ud83d\udd7a\n#46 (06:32:32) python object oriented programming \ud83d\ude97\n#47 (06:44:50) class variables \ud83c\udf93\n#48 (06:53:06) inheritance \ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66\n#49 (07:00:02) multiple inheritance \ud83d\udc1f\n#50 (07:08:04) super() \ud83d\udd34\n#51 (07:21:10) polymorphism \ud83c\udfad\n#52 (07:29:15) duck typing \ud83e\udd86\n#53 (07:33:34) static methods \u26a1\n#54 (07:39:31) class methods \ud83c\udfeb\n#55 (07:46:16) magic methods \ud83c\udf1f\n#56 (07:59:51) @property \u2699\ufe0f\n#57 (08:07:33) decorators \ud83c\udf8a\n#58 (08:14:57) exception handling \ud83d\udea6\n#59 (08:20:46) file detection \ud83d\udd75\ufe0f\u200d\u2642\ufe0f\n#60 (08:27:47) writing files \u270d\n#61 (08:41:33) reading files \ud83d\udd0d\n#62 (08:48:29) dates & times \ud83d\udcc5\n#63 (08:54:46) \u2b50 alarm clock \u23f0\n#64 (09:05:03) multithreading \ud83e\uddf5\n#65 (09:13:45) request API data \u21a9\ufe0f\n#66 (09:22:19) PyQt5 GUI intro \ud83d\udda5\ufe0f\n#67 (09:31:27) PyQt5 labels \ud83c\udff7\ufe0f\n#68 (09:40:23) PyQt5 images \ud83d\udcf7\n#69 (09:46:28) PyQt5 layout managers \ud83e\uddf2\n#70 (09:53:07) PyQt5 buttons \ud83d\udece\ufe0f\n#71 (10:00:12) PyQt5 checkboxes \u2705\n#72 (10:06:42) PyQt5 radio buttons \ud83d\udd18\n#73 (10:15:55) PyQt5 line edits \ud83d\udcac\n#74 (10:21:55) PyQt5 CSS styles \ud83c\udfa8\n#75 (10:32:48) \u2b50 digital clock program \ud83d\udd52\n#76 (10:48:38) \u2b50 stopwatch program \u23f1\n#77 (11:06:05) \u2b50 weather API app \u2600\ufe0f\n\nPython Interpreter: https://www.python.org/\nPyCharm IDE: https://www.jetbrains.com/pycharm/\n\n*Copyright Disclaimer*:\nThis video is the intellectual property of Bro Code. All rights reserved. No part of this video may be reproduced, distributed, or transmitted in any form or by any means, including but not limited to recording, uploading, or other electronic or mechanical methods, without my written permission, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law."
                },
                "defaultAudioLanguage": "en"
            },
            "statistics": {
                "viewCount": "3359962",
                "likeCount": "134642",
                "favoriteCount": "0",
                "commentCount": "7930"
            }
        },
        {
            "kind": "youtube#video",
            "etag": "HkKwPMQEiSGYrf9lixeu3J-cZlo",
            "id": "K5KVEU3aaeQ",
            "snippet": {
                "publishedAt": "2025-02-12T12:30:31Z",
                "channelId": "UCWv7vMbMWH4-V0ZXdmDpPBA",
                "title": "Python Full Course for Beginners [2025]",
                "description": "Master Python from scratch \ud83d\ude80 No fluff\u2014just clear, practical coding skills to kickstart your journey! \n\n\u2764\ufe0f Join this channel to get access to perks:\nhttps://www.youtube.com/channel/UCWv7vMbMWH4-V0ZXdmDpPBA/join\n\n\ud83d\ude80 Want to dive deeper?\n- Check out my Python mastery course: https://mosh.link/python-course\n- Subscribe for more awesome Python content: https://goo.gl/6PYaGF\n\n\ud83d\udd17 Related videos \nhttps://youtu.be/yVl_G-F7m8c?si=aoIiT6CyaRRfBsRM\n\n\u270b Stay connected:\n- Full Courses: https://codewithmosh.com\n- Twitter: https://twitter.com/moshhamedani\n- Facebook: https://www.facebook.com/programmingwithmosh/\n- Instagram: https://www.instagram.com/codewithmosh.official/\n- LinkedIn: https://www.linkedin.com/school/codewithmosh/\n\n\ud83d\udcd6 Table of Content\n0:00:00 Introduction\n0:00:56 What is Python?\n0:04:11 Installing Python\n0:05:36 Python Interpreter\n0:07:30 Code Editors\n0:08:49 Your First Python Program\n0:12:25 Python Extension\n0:14:26 Linting Python Code\n0:18:40 Formatting Python Code\n0:22:51 Running Python Code\n0:24:30 Python Implementations\n0:26:59 How Python Code is Executed\n0:29:45 Quiz\n0:31:17 Python Mastery Course\n0:31:44 Variables\n0:34:48 Variable Names\n0:37:51 Strings\n0:43:20 Escape Sequences\n0:46:01 Formatted Strings\n0:48:09 String Methods\n0:54:03 Numbers\n0:56:50 Working With Numbers\n0:58:59 Type Conversion\n1:04:03 Quiz\n1:06:43 Comparison Operators\n1:08:46 Conditional Statements\n1:12:56 Ternary Operator\n1:15:04 Logical Operators\n1:19:07 Short-circuit Evaluations\n1:21:13 Chaining Comparison Operators\n1:22:35 Quiz\n1:24:18 For Loops\n1:27:56 For..Else\n1:30:42 Nested Loops\n1:33:26 Iterables\n1:36:34 While Loops\n1:41:33 Infinite Loops\n1:43:10 Exercise\n1:45:13 Defining Functions\n1:47:37 Arguments\n1:49:57 Types of Functions\n1:53:59 Keyword Arguments\n1:55:59 Default Arguments\n1:57:34 xargs\n\n#Python #AI #MachineLearning #WebDevelopment",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/K5KVEU3aaeQ/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/K5KVEU3aaeQ/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/K5KVEU3aaeQ/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/K5KVEU3aaeQ/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/K5KVEU3aaeQ/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Programming with Mosh",
                "tags": [
                    "python full course",
                    "python full course for begginers",
                    "python beginners course",
                    "python complete course",
                    "python full tutorial",
                    "python tutorial",
                    "python programming tutorial",
                    "python tutorial for beginners",
                    "learn python",
                    "python basics",
                    "programming tutorial",
                    "python crash course",
                    "complete python course",
                    "python",
                    "python course",
                    "python programming",
                    "python for everybody",
                    "programming with mosh",
                    "mosh hamedani",
                    "code with mosh"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Python Full Course for Beginners [2025]",
                    "description": "Master Python from scratch \ud83d\ude80 No fluff\u2014just clear, practical coding skills to kickstart your journey! \n\n\u2764\ufe0f Join this channel to get access to perks:\nhttps://www.youtube.com/channel/UCWv7vMbMWH4-V0ZXdmDpPBA/join\n\n\ud83d\ude80 Want to dive deeper?\n- Check out my Python mastery course: https://mosh.link/python-course\n- Subscribe for more awesome Python content: https://goo.gl/6PYaGF\n\n\ud83d\udd17 Related videos \nhttps://youtu.be/yVl_G-F7m8c?si=aoIiT6CyaRRfBsRM\n\n\u270b Stay connected:\n- Full Courses: https://codewithmosh.com\n- Twitter: https://twitter.com/moshhamedani\n- Facebook: https://www.facebook.com/programmingwithmosh/\n- Instagram: https://www.instagram.com/codewithmosh.official/\n- LinkedIn: https://www.linkedin.com/school/codewithmosh/\n\n\ud83d\udcd6 Table of Content\n0:00:00 Introduction\n0:00:56 What is Python?\n0:04:11 Installing Python\n0:05:36 Python Interpreter\n0:07:30 Code Editors\n0:08:49 Your First Python Program\n0:12:25 Python Extension\n0:14:26 Linting Python Code\n0:18:40 Formatting Python Code\n0:22:51 Running Python Code\n0:24:30 Python Implementations\n0:26:59 How Python Code is Executed\n0:29:45 Quiz\n0:31:17 Python Mastery Course\n0:31:44 Variables\n0:34:48 Variable Names\n0:37:51 Strings\n0:43:20 Escape Sequences\n0:46:01 Formatted Strings\n0:48:09 String Methods\n0:54:03 Numbers\n0:56:50 Working With Numbers\n0:58:59 Type Conversion\n1:04:03 Quiz\n1:06:43 Comparison Operators\n1:08:46 Conditional Statements\n1:12:56 Ternary Operator\n1:15:04 Logical Operators\n1:19:07 Short-circuit Evaluations\n1:21:13 Chaining Comparison Operators\n1:22:35 Quiz\n1:24:18 For Loops\n1:27:56 For..Else\n1:30:42 Nested Loops\n1:33:26 Iterables\n1:36:34 While Loops\n1:41:33 Infinite Loops\n1:43:10 Exercise\n1:45:13 Defining Functions\n1:47:37 Arguments\n1:49:57 Types of Functions\n1:53:59 Keyword Arguments\n1:55:59 Default Arguments\n1:57:34 xargs\n\n#Python #AI #MachineLearning #WebDevelopment"
                },
                "defaultAudioLanguage": "en"
            },
            "statistics": {
                "viewCount": "278791",
                "likeCount": "10625",
                "favoriteCount": "0",
                "commentCount": "361"
            }
        },
        {
            "kind": "youtube#video",
            "etag": "F1f5pAs-Zj0v6pg4SC4sxEkFaxM",
            "id": "fWjsdhR3z3c",
            "snippet": {
                "publishedAt": "2021-05-26T12:32:40Z",
                "channelId": "UCuudpdbKmQWq2PPzYgVCWlA",
                "title": "Learn Python in Less than 10 Minutes for Beginners (Fast & Easy)",
                "description": "In this crash course I'll be teaching you the basics of Python in less than 10 minutes. Python is super easy to learn compared to the other languages!\n\nDownload Python: https://www.python.org/\nDownload PyCharm: https://www.jetbrains.com/pycharm/download/",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/fWjsdhR3z3c/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/fWjsdhR3z3c/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/fWjsdhR3z3c/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/fWjsdhR3z3c/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/fWjsdhR3z3c/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Indently",
                "tags": [
                    "code palace",
                    "cde palace",
                    "code palce",
                    "palace code"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "defaultLanguage": "en-GB",
                "localized": {
                    "title": "Learn Python in Less than 10 Minutes for Beginners (Fast & Easy)",
                    "description": "In this crash course I'll be teaching you the basics of Python in less than 10 minutes. Python is super easy to learn compared to the other languages!\n\nDownload Python: https://www.python.org/\nDownload PyCharm: https://www.jetbrains.com/pycharm/download/"
                },
                "defaultAudioLanguage": "en-GB"
            },
            "statistics": {
                "viewCount": "633014",
                "likeCount": "15139",
                "favoriteCount": "0",
                "commentCount": "403"
            }
        },
        {
            "kind": "youtube#video",
            "etag": "luu582UrVBLqlLV0I_PZw24k0H0",
            "id": "qRIf4ZnlhKA",
            "snippet": {
                "publishedAt": "2025-03-16T06:00:06Z",
                "channelId": "UCdEov4L0bpJ_h6W3sJxkfUA",
                "title": "Introduction to classes in Python for beginners",
                "description": "I am excited to introduce classes in Python for those who are just starting with object-oriented programming. Classes are the foundation of organizing your code into objects that can hold both data (attributes) and functionality (methods). This approach helps break down large problems into more manageable pieces, making your projects easier to maintain and expand.\n\nWhen you create a class, you define a blueprint for objects with specific traits and behaviors. For example, you can build a class called Car that includes attributes like color or engine size, as well as methods such as start_engine or drive. Once the class is defined, you can create multiple instances (objects), each representing a distinct car.\n\nHere is a quick outline of how to define and use a class in Python:\n\nUse the class keyword followed by a name for your class and a colon.\nInside the class, define an init method for initializing attributes.\nAdd one or more methods to give your class specific behaviors.\nCreate instances of the class by calling it like a function. Each instance has its own copy of attributes.\nBy grasping these fundamentals, you will be equipped to structure your code more cleanly, make it reusable, and handle complexity in a more organized way. Start experimenting by creating your own classes, and you will find that object-oriented programming brings a fresh perspective to how you design and build Python applications.\n\nI hope you find this introduction helpful. Let me know if you have any questions or if there are particular examples you would like to see next.",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/qRIf4ZnlhKA/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/qRIf4ZnlhKA/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/qRIf4ZnlhKA/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/qRIf4ZnlhKA/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/qRIf4ZnlhKA/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Vizuara",
                "tags": [
                    "python",
                    "classes",
                    "machine learning"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Introduction to classes in Python for beginners",
                    "description": "I am excited to introduce classes in Python for those who are just starting with object-oriented programming. Classes are the foundation of organizing your code into objects that can hold both data (attributes) and functionality (methods). This approach helps break down large problems into more manageable pieces, making your projects easier to maintain and expand.\n\nWhen you create a class, you define a blueprint for objects with specific traits and behaviors. For example, you can build a class called Car that includes attributes like color or engine size, as well as methods such as start_engine or drive. Once the class is defined, you can create multiple instances (objects), each representing a distinct car.\n\nHere is a quick outline of how to define and use a class in Python:\n\nUse the class keyword followed by a name for your class and a colon.\nInside the class, define an init method for initializing attributes.\nAdd one or more methods to give your class specific behaviors.\nCreate instances of the class by calling it like a function. Each instance has its own copy of attributes.\nBy grasping these fundamentals, you will be equipped to structure your code more cleanly, make it reusable, and handle complexity in a more organized way. Start experimenting by creating your own classes, and you will find that object-oriented programming brings a fresh perspective to how you design and build Python applications.\n\nI hope you find this introduction helpful. Let me know if you have any questions or if there are particular examples you would like to see next."
                },
                "defaultAudioLanguage": "en-IN"
            },
            "statistics": {
                "viewCount": "499",
                "likeCount": "31",
                "favoriteCount": "0",
                "commentCount": "1"
            }
        },
        {
            "kind": "youtube#video",
            "etag": "h0X4EI5W82DcoPmOjPbP59BBCfo",
            "id": "eWRfhZUzrAc",
            "snippet": {
                "publishedAt": "2022-08-09T12:54:23Z",
                "channelId": "UC8butISFwT-Wl7EV0hUK0BQ",
                "title": "Python for Beginners \u2013 Full Course [Programming Tutorial]",
                "description": "Learn the Python programming language in this full course for beginners! You will learn the fundamentals of Python and code two Python programs line-by-line. No previous programming experience is necessary before watching this course.\n\n\ud83d\udd17 Start using Replit: https://join.replit.com/python-students\n\n\u270f\ufe0f Beau Carnes developed this course. Check out one of his other channels: https://youtube.com/beau\n\n\ud83d\udcbb Rock, Paper, Scissors Code: https://replit.com/@BeauCarnes/rps-python\n\ud83d\udcbb Blackjack Code: https://replit.com/@BeauCarnes/blackjack-python\n\n\ud83c\udfd7 Replit provided a grant that made this course possible.\n\n\ud83d\udd17 The Python Handbook by Flavio Copes: https://www.freecodecamp.org/news/the-python-handbook/\n\n\u2764\ufe0f Support for this channel comes from our friends at Scrimba \u2013 the coding platform that's reinvented interactive learning: https://scrimba.com/freecodecamp\n\n\u2b50\ufe0f Course Contents \u2b50\ufe0f\n\u2328\ufe0f (0:00:00) Introduction\n\nRock, Paper, Scissors Intro Project\n\u2328\ufe0f (0:03:11) RPS - Variables and Functions\n\u2328\ufe0f (0:09:07) RPS - Calling Functions\n\u2328\ufe0f (0:12:31) RPS - Dictionaries\n\u2328\ufe0f (0:15:28) RPS - User Input\n\u2328\ufe0f (0:16:55) RPS - Libraries, Lists, Methods\n\u2328\ufe0f (0:20:45) RPS - Function Arguments\n\u2328\ufe0f (0:22:33) RPS - If Statements \n\u2328\ufe0f (0:25:40) RPS - Concatenating Strings\n\u2328\ufe0f (0:27:13) RPS - f-strings\n\u2328\ufe0f (0:30:26) RPS - Else and Elif Statements\n\u2328\ufe0f (0:33:37) RPS - Refactoring and Nested If\n\u2328\ufe0f (0:38:37) RPS - Accessing Dictionary Values\n\u2328\ufe0f (0:41:55) RPS - Testing Game\n\nFundamentals of Python\n\u2328\ufe0f (0:43:52) Setup Python Locally\n\u2328\ufe0f (0:47:47) Creating New Repl\n\u2328\ufe0f (0:48:45) Variables\n\u2328\ufe0f (0:51:21) Expressions and Statements \n\u2328\ufe0f (0:52:38) Comments\n\u2328\ufe0f (0:54:23) Data Types\n\u2328\ufe0f (1:00:16) Operators\n\u2328\ufe0f (1:00:44) Arithmetic Operators\n\u2328\ufe0f (1:03:52) Comparison Operators\n\u2328\ufe0f (1:05:13) Boolean Operators\n\u2328\ufe0f (1:07:26) Bitwise Operators\n\u2328\ufe0f (1:07:42) is & in Operators\n\u2328\ufe0f (1:08:21) Ternary Operator\n\u2328\ufe0f (1:09:40) Strings\n\u2328\ufe0f (1:12:36) String Methods\n\u2328\ufe0f (1:16:41) Escaping Characters\n\u2328\ufe0f (1:19:23) String Characters & Slicing\n\u2328\ufe0f (1:21:45) Booleans\n\u2328\ufe0f (1:26:07) Number Data Types\n\u2328\ufe0f (1:28:19) Built-in Functions\n\u2328\ufe0f (1:29:50) Enums\n\u2328\ufe0f (1:32:51) User Input\n\u2328\ufe0f (1:34:39) Control Statements\n\u2328\ufe0f (1:36:48) Lists\n\u2328\ufe0f (1:46:21) Sorting Lists\n\u2328\ufe0f (1:49:57) Tuples\n\u2328\ufe0f (1:53:49) Dictionaries\n\u2328\ufe0f (2:01:45) Sets\n\u2328\ufe0f (2:06:10) Functions\n\u2328\ufe0f (2:16:57) Variable Scope\n\u2328\ufe0f (2:18:35) Nested Functions \n\u2328\ufe0f (2:21:37) Closures\n\u2328\ufe0f (2:22:59) Objects\n\u2328\ufe0f (2:26:27) Loops\n\u2328\ufe0f (2:32:01) Break and Continue\n\u2328\ufe0f (2:33:02) Classes\n\u2328\ufe0f (2:39:12) Modules\n\u2328\ufe0f (2:45:55) Arguments from Command Line\n\u2328\ufe0f (2:52:42) Lambda Functions\n\u2328\ufe0f (2:54:51) Map, Filter, Reduce\n\u2328\ufe0f (3:02:41) Recursion \n\u2328\ufe0f (3:04:42) Decorators\n\u2328\ufe0f (3:06:45) Docstrings\n\u2328\ufe0f (3:09:54) Annotations\n\u2328\ufe0f (3:11:30) Exceptions \n\u2328\ufe0f (3:17:09) With\n\u2328\ufe0f (3:18:26) Installing Packages with pip\n\u2328\ufe0f (3:21:39) List Compression\n\u2328\ufe0f (3:23:09) Polymorphism\n\u2328\ufe0f (3:24:23) Operator Overloading\n\nBlackjack Card Game Project\n\u2328\ufe0f (3:26:58) Blackjack - Beginning\n\u2328\ufe0f (3:50:13) Blackjack - Deck Class\n\u2328\ufe0f (3:58:45) Blackjack - Card Class\n\u2328\ufe0f (4:03:25) Blackjack - Hand Class\n\u2328\ufe0f (4:21:13) Blackjack - Game Class\n\u2328\ufe0f (4:37:04) Blackjack - Testing\n\n\u2328\ufe0f (4:39:36) Conclusion\n\n--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.org\n\nRead hundreds of articles on programming: https://freecodecamp.org/news",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/eWRfhZUzrAc/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/eWRfhZUzrAc/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/eWRfhZUzrAc/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/eWRfhZUzrAc/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/eWRfhZUzrAc/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "freeCodeCamp.org",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "defaultLanguage": "en",
                "localized": {
                    "title": "Python for Beginners \u2013 Full Course [Programming Tutorial]",
                    "description": "Learn the Python programming language in this full course for beginners! You will learn the fundamentals of Python and code two Python programs line-by-line. No previous programming experience is necessary before watching this course.\n\n\ud83d\udd17 Start using Replit: https://join.replit.com/python-students\n\n\u270f\ufe0f Beau Carnes developed this course. Check out one of his other channels: https://youtube.com/beau\n\n\ud83d\udcbb Rock, Paper, Scissors Code: https://replit.com/@BeauCarnes/rps-python\n\ud83d\udcbb Blackjack Code: https://replit.com/@BeauCarnes/blackjack-python\n\n\ud83c\udfd7 Replit provided a grant that made this course possible.\n\n\ud83d\udd17 The Python Handbook by Flavio Copes: https://www.freecodecamp.org/news/the-python-handbook/\n\n\u2764\ufe0f Support for this channel comes from our friends at Scrimba \u2013 the coding platform that's reinvented interactive learning: https://scrimba.com/freecodecamp\n\n\u2b50\ufe0f Course Contents \u2b50\ufe0f\n\u2328\ufe0f (0:00:00) Introduction\n\nRock, Paper, Scissors Intro Project\n\u2328\ufe0f (0:03:11) RPS - Variables and Functions\n\u2328\ufe0f (0:09:07) RPS - Calling Functions\n\u2328\ufe0f (0:12:31) RPS - Dictionaries\n\u2328\ufe0f (0:15:28) RPS - User Input\n\u2328\ufe0f (0:16:55) RPS - Libraries, Lists, Methods\n\u2328\ufe0f (0:20:45) RPS - Function Arguments\n\u2328\ufe0f (0:22:33) RPS - If Statements \n\u2328\ufe0f (0:25:40) RPS - Concatenating Strings\n\u2328\ufe0f (0:27:13) RPS - f-strings\n\u2328\ufe0f (0:30:26) RPS - Else and Elif Statements\n\u2328\ufe0f (0:33:37) RPS - Refactoring and Nested If\n\u2328\ufe0f (0:38:37) RPS - Accessing Dictionary Values\n\u2328\ufe0f (0:41:55) RPS - Testing Game\n\nFundamentals of Python\n\u2328\ufe0f (0:43:52) Setup Python Locally\n\u2328\ufe0f (0:47:47) Creating New Repl\n\u2328\ufe0f (0:48:45) Variables\n\u2328\ufe0f (0:51:21) Expressions and Statements \n\u2328\ufe0f (0:52:38) Comments\n\u2328\ufe0f (0:54:23) Data Types\n\u2328\ufe0f (1:00:16) Operators\n\u2328\ufe0f (1:00:44) Arithmetic Operators\n\u2328\ufe0f (1:03:52) Comparison Operators\n\u2328\ufe0f (1:05:13) Boolean Operators\n\u2328\ufe0f (1:07:26) Bitwise Operators\n\u2328\ufe0f (1:07:42) is & in Operators\n\u2328\ufe0f (1:08:21) Ternary Operator\n\u2328\ufe0f (1:09:40) Strings\n\u2328\ufe0f (1:12:36) String Methods\n\u2328\ufe0f (1:16:41) Escaping Characters\n\u2328\ufe0f (1:19:23) String Characters & Slicing\n\u2328\ufe0f (1:21:45) Booleans\n\u2328\ufe0f (1:26:07) Number Data Types\n\u2328\ufe0f (1:28:19) Built-in Functions\n\u2328\ufe0f (1:29:50) Enums\n\u2328\ufe0f (1:32:51) User Input\n\u2328\ufe0f (1:34:39) Control Statements\n\u2328\ufe0f (1:36:48) Lists\n\u2328\ufe0f (1:46:21) Sorting Lists\n\u2328\ufe0f (1:49:57) Tuples\n\u2328\ufe0f (1:53:49) Dictionaries\n\u2328\ufe0f (2:01:45) Sets\n\u2328\ufe0f (2:06:10) Functions\n\u2328\ufe0f (2:16:57) Variable Scope\n\u2328\ufe0f (2:18:35) Nested Functions \n\u2328\ufe0f (2:21:37) Closures\n\u2328\ufe0f (2:22:59) Objects\n\u2328\ufe0f (2:26:27) Loops\n\u2328\ufe0f (2:32:01) Break and Continue\n\u2328\ufe0f (2:33:02) Classes\n\u2328\ufe0f (2:39:12) Modules\n\u2328\ufe0f (2:45:55) Arguments from Command Line\n\u2328\ufe0f (2:52:42) Lambda Functions\n\u2328\ufe0f (2:54:51) Map, Filter, Reduce\n\u2328\ufe0f (3:02:41) Recursion \n\u2328\ufe0f (3:04:42) Decorators\n\u2328\ufe0f (3:06:45) Docstrings\n\u2328\ufe0f (3:09:54) Annotations\n\u2328\ufe0f (3:11:30) Exceptions \n\u2328\ufe0f (3:17:09) With\n\u2328\ufe0f (3:18:26) Installing Packages with pip\n\u2328\ufe0f (3:21:39) List Compression\n\u2328\ufe0f (3:23:09) Polymorphism\n\u2328\ufe0f (3:24:23) Operator Overloading\n\nBlackjack Card Game Project\n\u2328\ufe0f (3:26:58) Blackjack - Beginning\n\u2328\ufe0f (3:50:13) Blackjack - Deck Class\n\u2328\ufe0f (3:58:45) Blackjack - Card Class\n\u2328\ufe0f (4:03:25) Blackjack - Hand Class\n\u2328\ufe0f (4:21:13) Blackjack - Game Class\n\u2328\ufe0f (4:37:04) Blackjack - Testing\n\n\u2328\ufe0f (4:39:36) Conclusion\n\n--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.org\n\nRead hundreds of articles on programming: https://freecodecamp.org/news"
                },
                "defaultAudioLanguage": "en"
            },
            "statistics": {
                "viewCount": "3127208",
                "likeCount": "62822",
                "favoriteCount": "0",
                "commentCount": "1297"
            }
        }
    ],
    "pageInfo": {
        "totalResults": 9,
        "resultsPerPage": 9
    }
}